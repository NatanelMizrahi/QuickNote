<!DOCTYPE html>
<html>
	<%- include('includes/head')%>
	<body class="dark-bg">
		<%- include('includes/nav')%>
		<div class="container">
			<br>
			<%- messages() %>
			<div class="col-lg-5">
				<div class="note-list-wrapper">
					<h2 class="mobile-xs-hidden">My notes</h2>
					<hr class="mobile-xs-hidden">	
					<% if(user){ %> 
						<% if(user.notes && user.notes.length>0){ %>
							<select id="sortBy">
									    <option value="">Sort By...</option>
									    <option value="title">Title</option>
									    <option value="modified">Last modified</option>
							</select>
						<% } %>
						<div class="note-list">
						<% if(user.notes && user.notes.length>0){ %>
							<% user.notes.forEach(function(note){ %>
								<div class="row">
									<a href="#" noteID="<%= note.id %>">
										<li class="col-lg-7">
											<%= note.title %>
										</li>
									</a>
									 <span class="badge date">
									 		<%= new Date(parseInt(note.modified)).toString().substring(4,21); %>
									 </span>
								</div>
								<% }); %>
							<% } %>
						</div>
							<h3 id="empty-msg" style="color:white">
								<%= user.notes && user.notes.length>0 ? "" : "You don't have any notes!" %></h3>
						<% } else { %>
						<div style="text-align:center">
							<h3>You are not logged in.</h3>
							<p>You must log in to be able to save notes.</p>
							<br>
							<button class="btn btn-lg btn-success" onclick="unload(); location.href='/users/login'">Login</button> 
							<span style="font-size:1.2em;">&nbsp;or&nbsp;</span>
							<button class="btn btn-lg btn-danger" data-toggle="modal" data-target="#signup-modal">Signup</button>
						</div>
						<% } %>
				</div>
			</div>

		<div class="">
			<div class="note-wrapper">
				<form id="note">
					<ul>
						<li><button data-toggle="tooltip" title="save &#13;&#10; ctrl+s" id="saveBtn" class="btn color-tooltip">
								<span class="glyphicon glyphicon-floppy-save"></span>
								<span class="mobile-xs-hidden">Save</span>
							</button>
						</li>
						<li><button data-toggle="tooltip" title="Delete &#13;&#10; ctrl+d" id="deleteBtn" class="btn color-tooltip">
								<span class="glyphicon glyphicon-trash"></span> 
								<span class="mobile-xs-hidden">Delete</span>
							</button>
						</li>
						<li><button data-toggle="tooltip" title="Undo changes &#13;&#10; ctrl+shift+z" id="undoBtn" class="btn color-tooltip">
								<span class="glyphicon glyphicon-repeat"></span> 
								<span class="mobile-xs-hidden">Undo changes</span>
							</button>
						</li>
					</ul>
					<ul>
						<li>
							<button data-toggle="tooltip" title="New &#13;&#10; ctrl+m" id="newBtn" class="btn color-tooltip">
								<span class="glyphicon glyphicon-pencil"></span> 
								<span class="mobile-xs-hidden">&nbsp;Add new note</span>
							</button>
						</li>
							<button data-toggle="tooltip" title="email-reminder &#13;&#10; ctrl+e" id="emailBtn" class="btn color-tooltip">
								<span class="glyphicon glyphicon-envelope"></span>&nbsp; <span class="mobile-xs-hidden">&nbsp; Add e-mail reminder</span>
							</button>
						</li>
					</ul>
					<br>
					<div id="note-msg"></div>
					<div class="form-group">
						<input id="noteID" value="new" hidden>
						<p class="capitalize"><input id="noteTitle" class="note-title form-control" type="text" value="Untitled" maxlength="25"></p>
					</div>
					<textarea id="noteBody" class="notepad" maxlength="5000" placeholder="Type your note content here." autofocus></textarea>
				</form>
			</div>		
		</div>
		<%- include('includes/scripts') %>
		<script>
			const baseUrl = `${window.location.protocol}//${window.location.host}`;
			//cancel beforeunload function
			function unload(){
				window.onbeforeunload=undefined;
			}

			$(function(){
			//config
			var toggleDuration=500;
			var fadeDelay=1000;
			var unloadCheck=false;
			$("#note-msg").hide();
			$("[data-toggle='tooltip']").tooltip();
			
			//alert leaving page
			if(unloadCheck){ 
				window.onbeforeunload=function(e){
					var msg="Are you sure you want to leave this page? \nYou may have unsaved notes.";
					e.returnValue=msg;
					return msg;
				};
			}

			//"coming soon!" on hover
			$("#emailBtn").hover(function(){
				$(this).text("Coming Soon!");		
			}, function(){
				$(this).html(`	<span class="glyphicon glyphicon-envelope"></span>&nbsp; <span class="mobile-xs-hidden">&nbsp; Add e-mail reminder</span>`);
			});

			//ajax error handler
			function ajaxError(xhr,stat, err){
				console.log(err);
		 		if(xhr.status==511){ //session expired
		 			unload(); //pervent default beforeunload hack
		 			return window.location.replace(xhr.responseJSON.url);	//users/login
		 		}
		 		$('#noteTitle').val("ERROR");				 		 
		 		$('#noteBody').val("Oops! Something went wrong. There was an error loading the note. Please try again later.");
		 	}

		 	//render all the notes in note list
			function renderNotes(notes){
				if(notes.length==0){	//no notes
					$("#sortBy").hide();
					$('#empty-msg').show();
					$('#empty-msg').text("You don't have any notes!");
				} else {
					$("#sortBy").show();
					$('#empty-msg').hide();
				}	
				//render notes from array
				$(".note-list").html("");
					notes.forEach(function(note){
						$(".note-list").append(
							`<div class='row'>
								<a href="#" noteID="${note.id}">
									<li class="col-lg-7">${note.title}</li>
								</a>
								<span class="col-lg-4 badge date"> 
									${new Date(parseInt(note.modified)).toString().substring(4,21)}
								</span>
							</div>`);
						//format date..
				});
			}

			//render the note body
			function renderNotebyID(noteID){
				if(noteID=='new'){
					$('#noteTitle').val("Untitled");
				 	$('#noteBody').val("");
				 	return;
				}
				$.ajax({
					type:'GET',
					url: baseUrl + "/notes/getNote/"+noteID,
					dataType:'JSON',
					success: function(note){
						$('#noteTitle').val(note.title);
				 		$('#noteBody').val(note.body);
				 		$("#noteID").val(note.id);
					},
					error: function(xhr,stat, err){ ajaxError(xhr,stat,err);}
				});
			}

			//******CLICK EVENT HANDLERS*****//

			//new note
			//////////////////////////
			$("#newBtn").click(function(e){
				e.preventDefault();
				if($("#noteID").val()!=="new"){
					$("#note-msg").text("Autosaving..");
					$("#note-msg").show(1000);
				}
				$("#saveBtn").click();
				$("#noteID").val("new");
				$("#noteBody").val("");
				$("#noteTitle").val("Untitled");
			});

			//undo changes
			//////////////////////////
			$("#undoBtn").click(function(e){
				e.preventDefault();
				var noteID=$("#noteID").val();
				if(noteID!=='new'){
					$("#note-msg").text("Restoring last save.").show(toggleDuration);
					$("#note-msg").delay(fadeDelay).hide(toggleDuration, function(){ $(this).stop(true,false);});
				}
				renderNotebyID(noteID);
			});

			//delete
			//////////////////////////
			$("#deleteBtn").click(function(e){
				e.preventDefault();
				var noteID=$("#noteID").val();
				if(noteID=='new'){
					$("#note-msg").text("Unable to delete new note.").show(toggleDuration);
					$("#note-msg").delay(fadeDelay).hide(toggleDuration, function(){ $(this).stop(true,false);});
					return;
				}
				$("#note-msg").text("deleting note: "+ $("#noteTitle").val() +"...").show(toggleDuration);
				$.ajax({
					type:'DELETE',
					dataType: 'JSON',
					url: baseUrl + "/notes/"+noteID,
					success:function(notes){ 
						$("#note-msg").delay(fadeDelay).hide(toggleDuration, function(){ $(this).stop(true,false);});
						renderNotes(notes);
						if(notes.length==0){
							$("#noteID").val("new");
						} else {
							var nextNoteID=$(".note-list a").first().attr('noteID');
							renderNotebyID(nextNoteID);
						}
					},
					error: function(xhr,stat, err){ ajaxError(xhr,stat,err);}
				});
			});

			//save
			//////////////////////////
			$("#saveBtn").click(function(e){
				e.preventDefault();	//prevent page from reloading
				var title=$("#noteTitle").val();
				var body= $("#noteBody").val();
				if(body.length===0){
					$("#note-msg").text("Unable to save empty notes.").show(toggleDuration);
					$("#note-msg").delay(fadeDelay).hide(toggleDuration, function(){ $(this).stop(true,false);});
					return;
				} 
				$("#note-msg").text("Saving note: "+ title +"...").show(toggleDuration);
				var noteID=$("#noteID").val();
				if(noteID==="new"){
					$.ajax({
						type:'POST',
						url: baseUrl + "/notes/new/",
						data:{
							title:title,
							body:body,
							modified: Date.now()
						},
						dataType:"json",
						success: function(data){
							$("#note-msg").delay(fadeDelay).hide(toggleDuration, function(){ $(this).stop(true,false);});
							renderNotes(data.notes);
							renderNotebyID(data.currentNoteID);
					 	},
					 	error: function(xhr,stat, err){ ajaxError(xhr,stat,err);}
					});
				}
				else{	//update note
				$.ajax({
						type:'PUT',
						url: baseUrl + "/notes/",
						data:{
							noteID: noteID,
							title:title,
							body:body,
							modified: Date.now()
						},
						dataType:"json",
						success: function(notes){
							$("#note-msg").delay(fadeDelay).hide(toggleDuration, function(){ $(this).stop(true,false);});
							renderNotes(notes);
					 	},
					 	error: function(xhr,stat, err){ ajaxError(xhr,stat,err);}
					});
				}
			});

			//sort by
			//////////////////////////
			$('#sortBy').on('change',function(){
				var sortBy= $(this).val();
				$.ajax({
					type:'PUT',
					url: baseUrl + "/notes/sort",
					data:{sortBy: sortBy},
					success: function(notes){ renderNotes(notes);}				
				});
			});

			//note list
			////////////////////
			$('.note-list').on('click', 'a', function(){
			//IMPORTANT! event delegation so that after appending a new "a" dynamic-child to ".note-list" static parent, the onclick event still fires 	
				var noteID=$(this).attr('noteID');
				renderNotebyID(noteID);
			});

			//keyboard shortcuts setup
			//////////////////////////
			$(window).keydown(function(e){
				var key=e.keycode || e.which;
				var shortcut=true;
				if(e.ctrlKey){
					switch(key){
						case 83: //ctrl+S
							//e.preventDefault();
							$("#saveBtn").click();
							break;
						case 68://ctrl+D
							//e.preventDefault();
							$("#deleteBtn").click();
							break;
						case 69: //ctrl+E
							//e.preventDefault();
							$("#emailBtn").click();
							break;
						case 77: //ctrl+m
							//e.preventDefault();
							$("#newBtn").click();
							break;
						case 90: //ctrl+shift+Z
							if(e.shiftKey){
								//e.preventDefault();
								$("#undoBtn").click();
							}
							break;
						default: shortcut=false;
					}
					if(shortcut) e.preventDefault();
				}
			});

		});	//$jQuery

		</script>
	</body>
</html>
